{"version":3,"sources":["store/middleware/logger.js","store/reducers/counter.reducer.js","store/reducers/result.reducer.js","index.js","store/actions/counter.actions.js","store/actions/result.actions.js"],"names":["logger","store","next","action","console","log","initialState","counter","counterReducer","state","type","counterActions","value","result","resultReducer","resultActions","duplicateResult","filter","item","index","Counter","React","lazy","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","ctr","res","applyMiddleware","thunk","ReactDOM","render","fallback","document","getElementById","INCREMENT","DECREMENT","ADD_NUMBER","SUBTRACT_NUMBER","onAddNumber","onSubtractNumber","asyncAddNumber","dispatch","setTimeout","STORE_RESULT","DELETE_RESULT","onDeleteResult","idx","onStoreResult"],"mappings":"0MAMeA,G,MANA,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAE5BC,QAAQC,IAAI,WAAYJ,EAAOE,GAC/BD,EAAKC,O,cCFHG,EAAe,CACjBC,QAAU,GAoBCC,MAlBf,WAAsD,IAA9BC,EAA6B,uDAArBH,EAAcH,EAAO,uCACjD,OAAQA,EAAOO,MACX,KAAKC,IAA0B,OAAO,2BAC/BF,GADwB,IAE3BF,QAAUE,EAAMF,QAAU,IAC9B,KAAKI,IAA0B,OAAO,2BAC/BF,GADwB,IAE3BF,QAAUE,EAAMF,QAAU,IAC9B,KAAKI,IAA2B,OAAO,2BAChCF,GADyB,IAE5BF,QAAUE,EAAMF,QAAUJ,EAAOS,QACrC,KAAKD,IAAiC,OAAO,2BACtCF,GAD+B,IAElCF,QAAUE,EAAMF,QAAUJ,EAAOS,QACrC,QAAS,OAAOH,I,eChBlBH,EAAe,CACjBO,OAAS,IAkBEC,MAhBf,WAAqD,IAA9BL,EAA6B,uDAArBH,EAAcH,EAAO,uCAChD,OAAQA,EAAOO,MACX,KAAKK,IAA6B,OAAO,2BAClCN,GAD2B,IAE9BI,OAAM,sBAAOJ,EAAMI,QAAb,CAAqBV,EAAOI,YAEtC,KAAKQ,IACD,IAAMC,EAAkBP,EAAMI,OAAOI,QAAO,SAACC,EAAMC,GAAS,OAAOA,IAAUhB,EAAOgB,SACpF,OAAO,2BACJV,GADH,IAEAI,OAASG,IAEb,QAAS,OAAOP,I,OCJlBW,EAAUC,IAAMC,MAAK,kBAAM,gCAE3BC,EAAmBC,OAAOC,sCAAwCC,IAElEzB,EAAQ0B,YAAYC,YAAgB,CACxCC,IAAMrB,EACNsB,IAAMhB,IACJS,EAAiBQ,YAAgB/B,EAAQgC,OAE7CC,IAASC,OACP,cAAC,IAAD,CAAUjC,MAAOA,EAAjB,SACA,cAAC,WAAD,CAAUkC,SAAU,2CAApB,SACE,cAACf,EAAD,QAIFgB,SAASC,eAAe,U,+BC7B1B,8OAAO,IAAMC,EAAY,oCACZC,EAAY,oCACZC,EAAa,4BACbC,EAAkB,mCAIxB,SAASC,EAAY9B,GACxB,MAAO,CACHF,KAAO8B,EACP5B,SAID,SAAS+B,EAAiB/B,GAC7B,MAAO,CACHF,KAAO+B,EACP7B,SAID,SAASgC,EAAehC,GAC3B,OAAO,SAASiC,GACZC,YAAW,WACPD,EAASH,EAAY9B,MACtB,Q,+BCzBX,wIAAO,IAAMmC,EAAe,sCACfC,EAAgB,mDAItB,SAASC,EAAeC,GAC3B,MAAO,CACHxC,KAAOsC,EACP7B,MAAQ+B,GAIT,SAASC,EAActB,GAC1B,MAAO,CACHnB,KAAOqC,EACPxC,QAAUsB,M","file":"static/js/main.1f6cbc9d.chunk.js","sourcesContent":["const logger = store => next => action => {\r\n    // make any side effect\r\n    console.log(\"[Logger]\", store, action)\r\n    next(action);\r\n  }\r\n\r\nexport default logger;","import * as counterActions from \"../actions/counter.actions\" \r\nconst initialState = {\r\n    counter : 0\r\n}\r\nfunction counterReducer(state = initialState, action){\r\n    switch (action.type) {\r\n        case counterActions.INCREMENT: return { \r\n            ...state,\r\n            counter : state.counter + 1}\r\n        case counterActions.DECREMENT: return { \r\n            ...state,\r\n            counter : state.counter - 1}\r\n        case counterActions.ADD_NUMBER: return { \r\n            ...state,\r\n            counter : state.counter + action.value}\r\n        case counterActions.SUBTRACT_NUMBER : return { \r\n            ...state,\r\n            counter : state.counter - action.value}\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","import * as resultActions from \"../actions/result.actions\";\r\n\r\nconst initialState = {\r\n    result : []\r\n}\r\nfunction resultReducer(state = initialState, action){\r\n    switch (action.type) {\r\n        case resultActions.STORE_RESULT : return {\r\n            ...state,\r\n            result : [...state.result, action.counter]\r\n        }\r\n        case resultActions.DELETE_RESULT: {\r\n            const duplicateResult = state.result.filter((item, index)=>{return index !== action.index})\r\n            return {\r\n            ...state,\r\n            result : duplicateResult\r\n        }}\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default resultReducer;","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport logger from \"./store/middleware/logger\";\n// import rootReducer from \"./store/root.reducer\";\nimport counterReducer from \"./store/reducers/counter.reducer\";\nimport resultReducer from \"./store/reducers/result.reducer\";\n\nconst Counter = React.lazy(() => import(\"./Components/Counter/Counter\"))\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(combineReducers({\n  ctr : counterReducer,\n  res : resultReducer\n}), composeEnhancers(applyMiddleware(logger, thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n  <Suspense fallback={<p>Loading...</p>}>\n    <Counter />\n    </Suspense>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// <Router>\n//     <React.StrictMode>\n//       <App />\n//     </React.StrictMode>\n//   </Router>\n\n// store -> counter\n              // - actions | reducers\n// store -> result\n              // - actions | reducers","export const INCREMENT = \"[COUNTER] to increase the counter\"\r\nexport const DECREMENT = \"[COUNTER] to decrease the counter\"\r\nexport const ADD_NUMBER = \"[COUNTER] to add a number\"\r\nexport const SUBTRACT_NUMBER = \"[COUNTER] to subtract the number\" \r\n\r\n// Action Creators\r\n\r\nexport function onAddNumber(value){\r\n    return {\r\n        type : ADD_NUMBER,\r\n        value\r\n    }\r\n}\r\n\r\nexport function onSubtractNumber(value){\r\n    return {\r\n        type : SUBTRACT_NUMBER,\r\n        value\r\n    }\r\n}\r\n\r\nexport function asyncAddNumber(value){\r\n    return function(dispatch) {\r\n        setTimeout(() => {\r\n            dispatch(onAddNumber(value))\r\n        }, 3000)\r\n    }\r\n}","export const STORE_RESULT = \"[RESULT] to store the counter value\"\r\nexport const DELETE_RESULT = \"[RESULT] to delete the counter value from result\"\r\n\r\n// Action Creators\r\n\r\nexport function onDeleteResult(idx){\r\n    return {\r\n        type : DELETE_RESULT,\r\n        index : idx\r\n    }\r\n}\r\n\r\nexport function onStoreResult(ctr){\r\n    return {\r\n        type : STORE_RESULT,\r\n        counter : ctr\r\n    }\r\n}\r\n"],"sourceRoot":""}